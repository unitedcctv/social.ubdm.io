# Development-specific Docker Compose overrides
# Consolidates all development settings including existing override.yml
# Use with: docker compose watch (automatically loads as override)

services:
  # Database for local development
  db:
    image: pgvector/pgvector:pg12
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - default

  # Redis with development overrides
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - default
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - ./redis:/data

  # Web service with development overrides
  web:
    env_file: .env
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

  # Streaming service with development overrides
  streaming:
    env_file: .env
    ports:
      - "4000:4000"
    depends_on:
      - db
      - redis

  # Sidekiq with development overrides
  sidekiq:
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - ./public/system:/mastodon/public/system

volumes:
  app-db-data:
